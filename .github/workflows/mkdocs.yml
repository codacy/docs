name: MkDocs

on: push

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/heads/release/v')
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCOUNT_TOKEN }}
          submodules: true
          fetch-depth: 0
      - run: |
          echo "Running git log"
          git submodule init
          git submodule update
          git submodule status
          echo "---"
          git log submodules/chart/docs/index.md
          echo "---"
          cd submodules/chart
          git log --date="short" --diff-filter=AR docs/requirements.md
          cd ../..
          echo "Finished running git log"

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt

      - name: Build docs
        run: |
          mkdocs build
          less site/feed_rss_updated.xml

  deploy-version:
    name: Deploy version
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/release/v')
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCOUNT_TOKEN }}
          submodules: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt

      - name: Setup git author
        run: |
          remote_repo="https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git remote rm origin
          git remote add origin "${remote_repo}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy docs
        run: |
          git fetch origin gh-pages --verbose
          mike deploy ${GITHUB_REF##*/release/} --config-file "${GITHUB_WORKSPACE}/mkdocs.yml" --push --rebase

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCOUNT_TOKEN }}
          submodules: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt

      - name: Setup git author
        run: |
          remote_repo="https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git remote rm origin
          git remote add origin "${remote_repo}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy docs
        run: |
          echo "${CUSTOM_DOMAIN}" > "${GITHUB_WORKSPACE}/docs/CNAME"
          git fetch origin gh-pages --verbose
          mike deploy . -t Latest --config-file "${GITHUB_WORKSPACE}/mkdocs.yml" --push --rebase
        env:
          CUSTOM_DOMAIN: docs.codacy.com
